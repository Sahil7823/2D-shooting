"use client"

import React, { useRef, useEffect, useState } from 'react'

interface GameObject {
  x: number
  y: number
  width: number
  height: number
}

interface Bullet extends GameObject {
  active: boolean
}

interface Enemy extends GameObject {
  speed: number
}

export default function Game() {
  const canvasRef = useRef<HTMLCanvasElement>(null)
  const [score, setScore] = useState(0)
  const [gameOver, setGameOver] = useState(false)

  useEffect(() => {
    const canvas = canvasRef.current
    if (!canvas) return

    const ctx = canvas.getContext('2d')
    if (!ctx) return

    const player: GameObject = { x: canvas.width / 2, y: canvas.height - 30, width: 20, height: 20 }
    let bullets: Bullet[] = []
    let enemies: Enemy[] = []
    let animationFrameId: number

    const shoot = () => {
      bullets.push({ x: player.x + player.width / 2, y: player.y, width: 2, height: 10, active: true })
    }

    const spawnEnemy = () => {
      enemies.push({
        x: Math.random() * (canvas.width - 20),
        y: 0,
        width: 20,
        height: 20,
        speed: 2 + Math.random() * 3
      })
    }

    const checkCollision = (rect1: GameObject, rect2: GameObject) => {
      return rect1.x < rect2.x + rect2.width &&
             rect1.x + rect1.width > rect2.x &&
             rect1.y < rect2.y + rect2.height &&
             rect1.y + rect1.height > rect2.y
    }

    const gameLoop = () => {
      ctx.clearRect(0, 0, canvas.width, canvas.height
